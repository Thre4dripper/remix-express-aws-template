name: üöÄ Deploy
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read
  pull-requests: write

jobs:
  eslint:
    name: ‚¨£ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚éî Setup node
        uses: actions/checkout@v4
        with:
          node-version: lts/*

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: üî¨ Lint
        run: npm run lint
        continue-on-error: true

  typecheck:
    name:  ¶ Type Check
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚éî Setup node
        uses: actions/checkout@v4
        with:
          node-version: lts/*

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: üîé Type check
        run: npm run typecheck --if-present
        continue-on-error: true

  vitest:
    name: ‚ö° Vitest
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚éî Setup node
        uses: actions/checkout@v4
        with:
          node-version: lts/*

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run Vitest
        run: yarn vitest run --coverage
        continue-on-error: true

  playwright:
    name: üé≠ Playwright
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚éî Setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Install Playwright Browsers
        run: yarn playwright install --with-deps

      - name: Run Playwright tests
        run: yarn playwright test
        continue-on-error: true

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 1

  sonarqube:
    name: SonarQube
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    name: Trigger AWS Amplify Deploy
    runs-on: ubuntu-latest
    needs: [eslint, typecheck, vitest, playwright, sonarqube]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Call AWS Amplify Deploy Hook
        run: |
          curl -X POST -d {} "https://webhooks.amplify.ap-south-1.amazonaws.com/prod/webhooks?id=60dd1df0-26bc-488f-920b-9893d80c0cc7&token=MXZMclK4dF4Izt2WhIMQfvqfQwNoR3aPxiU3YrwgnI&operation=startbuild" -H "Content-Type:application/json"
